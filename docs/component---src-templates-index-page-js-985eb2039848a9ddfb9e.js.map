{"version":3,"sources":["webpack:///./src/components/blog-list-home.js","webpack:///./src/templates/index-page.js","webpack:///./src/components/post-card.js"],"names":["PostMaker","data","className","to","BlogListHome","query","render","posts","allMarkdownRemark","edges","filter","edge","node","frontmatter","date","map","key","id","pageQuery","HomePage","markdownRemark","html","Image","featuredImage","childImageSharp","fluid","class","title","tagline","dangerouslySetInnerHTML","__html","cta","ctaLink","ctaText","alt","PostCard","slug","objectFit","objectPosition"],"mappings":"6OAMMA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,6BAASC,UAAU,cACjB,qDACwB,wCAAsB,IAC5C,0BAAMA,UAAU,eACd,kBAAC,IAAD,QAGJ,yBAAKA,UAAU,yBAAyBD,GACxC,kBAAC,OAAD,CAAMC,UAAU,SAASC,GAAG,SAA5B,YAEE,0BAAMD,UAAU,eACd,kBAAC,IAAD,UAMO,SAASE,IACtB,OACE,kBAAC,cAAD,CACEC,MAAK,aA6BLC,OAAQ,SAAAL,GACN,IAAMM,EAAQN,EAAKO,kBAAkBC,MAClCC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKC,YAAYC,QACvCC,KAAI,SAAAJ,GAAI,OAAI,kBAAC,IAAD,CAAUK,IAAKL,EAAKC,KAAKK,GAAIhB,KAAMU,EAAKC,UACvD,OAAO,kBAAC,EAAD,CAAWX,KAAMM,O,gBCnDnBW,EAAS,aAwDPC,UA7BE,SAAC,GAAc,IACtBC,EADqB,EAAXnB,KACVmB,eACAP,EAAsBO,EAAtBP,YAAaQ,EAASD,EAATC,KACfC,EAAQT,EAAYU,cAAgBV,EAAYU,cAAcC,gBAAgBC,MAAQ,GAC7F,OACC,kBAAC,IAAD,KACI,kBAAC,IAAD,MACA,yBAAKvB,UAAU,gCACb,6BACE,wBAAIwB,MAAM,SAASb,EAAYc,OAC/B,uBAAGD,MAAM,WAAWb,EAAYe,SAChC,yBAAK1B,UAAU,cAAc2B,wBAAyB,CAACC,OAAQT,KAC/D,kBAAC,OAAD,CAAMlB,GAAIU,EAAYkB,IAAIC,QAAS9B,UAAU,UAAUW,EAAYkB,IAAIE,QAAQ,0BAAMP,MAAM,eAAc,kBAAC,IAAD,SAE3G,6BACGJ,EACC,kBAAC,IAAD,CACEG,MAAOH,EACPY,IAAKrB,EAAYc,MAAQ,oBACzBzB,UAAU,mBAEV,KAGR,kBAACE,EAAD,S,kCC5DN,0DA2Be+B,IAvBE,SAAC,GAAD,IAAGlC,EAAH,EAAGA,KAAH,OACf,6BAASC,UAAU,aAChBD,EAAKY,YAAYU,cAChB,kBAAC,OAAD,CAAMpB,GAAIF,EAAKY,YAAYuB,MACzB,kBAAC,IAAD,CACEX,MAAOxB,EAAKY,YAAYU,cAAcC,gBAAgBC,MACtDY,UAAU,QACVC,eAAe,UACfJ,IAAKjC,EAAKY,YAAYc,MAAQ,oBAC9BzB,UAAU,oBAId,GAEF,yBAAKwB,MAAM,gBACT,wBAAIxB,UAAU,SACZ,kBAAC,OAAD,CAAMC,GAAIF,EAAKY,YAAYuB,MAAOnC,EAAKY,YAAYc","file":"component---src-templates-index-page-js-985eb2039848a9ddfb9e.js","sourcesContent":["import React from 'react'\r\nimport { Link, StaticQuery, graphql } from 'gatsby'\r\nimport { RiArrowDownLine, RiArrowRightSLine } from 'react-icons/ri'\r\n\r\nimport PostCard from './post-card'\r\n\r\nconst PostMaker = ({ data }) => (\r\n  <section className=\"home-posts\">\r\n    <h2>\r\n      Últimos artículos del <strong>Blog</strong>{' '}\r\n      <span className=\"icon -right\">\r\n        <RiArrowDownLine />\r\n      </span>\r\n    </h2>\r\n    <div className=\"grids col-1 sm-2 lg-3\">{data}</div>\r\n    <Link className=\"button\" to=\"/blog\">\r\n      Ver todos\r\n      <span className=\"icon -right\">\r\n        <RiArrowRightSLine />\r\n      </span>\r\n    </Link>\r\n  </section>\r\n)\r\n\r\nexport default function BlogListHome() {\r\n  return (\r\n    <StaticQuery\r\n      query={graphql`\r\n        query {\r\n          allMarkdownRemark(\r\n            sort: { order: DESC, fields: [frontmatter___date] }\r\n            filter: { frontmatter: { type: { eq: \"post\" } } }\r\n            limit: 21\r\n          ) {\r\n            edges {\r\n              node {\r\n                id\r\n                excerpt(pruneLength: 250)\r\n                frontmatter {\r\n                  date(formatString: \"MMMM DD, YYYY\")\r\n                  slug\r\n                  title\r\n                  featuredImage {\r\n                    childImageSharp {\r\n                      fluid(maxWidth: 540, maxHeight: 360, quality: 70) {\r\n                        ...GatsbyImageSharpFluid\r\n                        ...GatsbyImageSharpFluidLimitPresentationSize\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      `}\r\n      render={data => {\r\n        const posts = data.allMarkdownRemark.edges\r\n          .filter(edge => !!edge.node.frontmatter.date)\r\n          .map(edge => <PostCard key={edge.node.id} data={edge.node} />)\r\n        return <PostMaker data={posts} />\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport { RiArrowRightSLine } from \"react-icons/ri\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport BlogListHome from \"../components/blog-list-home\"\r\nimport SEO from \"../components/seo\"\r\n\r\nexport const pageQuery = graphql`\r\n  query HomeQuery($id: String!){\r\n\t\tmarkdownRemark(id: { eq: $id }) {\r\n      id\r\n      html\r\n      frontmatter {\r\n        title\r\n        tagline\r\n        featuredImage {\r\n          childImageSharp {\r\n            fluid(maxWidth: 480, maxHeight: 380, quality: 80, srcSetBreakpoints: [960, 1440]) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n            sizes {\r\n              src\r\n            }\r\n          }\r\n        }\r\n        cta {\r\n          ctaText\r\n          ctaLink\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst HomePage = ({ data }) => {\r\n  const { markdownRemark } = data // data.markdownRemark holds your post data\r\n  const { frontmatter, html } = markdownRemark\r\n  const Image = frontmatter.featuredImage ? frontmatter.featuredImage.childImageSharp.fluid : \"\"\r\n\treturn (\r\n\t\t<Layout>\r\n      <SEO/>\r\n      <div className=\"home-banner grids col-1 sm-2\">\r\n        <div>\r\n          <h1 class=\"title\">{frontmatter.title}</h1>\r\n          <p class=\"tagline\">{frontmatter.tagline}</p>\r\n          <div className=\"description\" dangerouslySetInnerHTML={{__html: html}}/>\r\n          <Link to={frontmatter.cta.ctaLink} className=\"button\">{frontmatter.cta.ctaText}<span class=\"icon -right\"><RiArrowRightSLine/></span></Link>\r\n        </div>\r\n        <div>\r\n          {Image ? (\r\n            <Img \r\n              fluid={Image} \r\n              alt={frontmatter.title + ' - Featured image'}\r\n              className=\"featured-image\"\r\n            />\r\n          ) : \"\"}\r\n        </div>\r\n      </div>\r\n      <BlogListHome/>\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\n\r\nconst PostCard = ({ data }) => (\r\n  <article className=\"post-card\">\r\n    {data.frontmatter.featuredImage ? (\r\n      <Link to={data.frontmatter.slug}>\r\n        <Img\r\n          fluid={data.frontmatter.featuredImage.childImageSharp.fluid}\r\n          objectFit=\"cover\"\r\n          objectPosition=\"50% 50%\"\r\n          alt={data.frontmatter.title + ' - Featured image'}\r\n          className=\"featured-image\"\r\n        />\r\n      </Link>\r\n    ) : (\r\n      ''\r\n    )}\r\n    <div class=\"post-content\">\r\n      <h2 className=\"title\">\r\n        <Link to={data.frontmatter.slug}>{data.frontmatter.title}</Link>\r\n      </h2>\r\n    </div>\r\n  </article>\r\n)\r\n\r\nexport default PostCard\r\n"],"sourceRoot":""}